{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","isPlaying","setIsPlaying","audioRef","setSongInfo","songInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","type","min","max","duration","value","onChange","e","target","size","icon","faAngleLeft","onClick","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","useState","data","songEndHandler","ref","onTimeUpdate","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71df2784.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  const activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === nextPrev.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  };\r\n\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const dragHandler = (e) => {\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === 'skip-forward') {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === 'skip-back') {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        await setCurrentSong(songs[songs.length - 1]);\r\n        activeLibraryHandler(songs[songs.length - 1]);\r\n\r\n        if (isPlaying) {\r\n          audioRef.current.play();\r\n        }\r\n        return;\r\n      }\r\n      await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n      activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  const trackAnim = {\r\n    transform: `translateX(${songInfo.animationPercentage}%)`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            type=\"range\"\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n          />\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : '0:00'}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          className=\"skip-back\"\r\n          size=\"2x\"\r\n          icon={faAngleLeft}\r\n          onClick={() => skipTrackHandler('skip-back')}\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          size=\"2x\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n        />\r\n        <FontAwesomeIcon\r\n          className=\"skip-forward\"\r\n          size=\"2x\"\r\n          icon={faAngleRight}\r\n          onClick={() => skipTrackHandler('skip-forward')}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React from 'react';\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.name}></img>\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","import React from 'react';\r\n\r\nconst LibrarySong = ({\r\n  song,\r\n  setCurrentSong,\r\n  songs,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  id,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(song);\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n    if (isPlaying) {\r\n      audioRef.current.play();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      onClick={songSelectHandler}\r\n      className={`library-song ${song.active ? 'selected' : ''}`}\r\n    >\r\n      <img src={song.cover} alt={song.name}></img>\r\n      <div className=\"song-description\">\r\n        <h3>{song.name}</h3>\r\n        <h4>{song.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from 'react';\r\nimport LibrarySong from './LibrarySong';\r\n\r\nconst Library = ({\r\n  songs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  setSongs,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? 'active-library' : ''}`}>\r\n      <h2>Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            song={song}\r\n            setCurrentSong={setCurrentSong}\r\n            songs={songs}\r\n            key={song.id}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            setSongs={setSongs}\r\n            id={song.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Library;\r\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMusic } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nav = ({ setLibraryStatus, libraryStatus }) => {\r\n  return (\r\n    <nav>\r\n      <h1>Waves</h1>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: 'Wildlife',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg',\r\n      artist: 'Philanthrope, chromonicci',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=9917',\r\n      color: ['#543325', '#281913'],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'Chinatown',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2020/07/ccad9b1271d1a9701f84380bb217da7d923a6c4f-1024x1024.jpg',\r\n      artist: 'SwuM',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=7991',\r\n      color: ['#985B60', '#1B283B'],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: 'Bliss',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2020/09/5bff1a6f1bd0e2168d29b4c841b811598135e457-1024x1024.jpg',\r\n      artist: 'Misha, Jussi Halme',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=9248',\r\n      color: ['#55657F', '#B77F86'],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: 'Just Wanna Be Free',\r\n      cover:\r\n        'https://chillhop.com/wp-content/themes/chillhop/assets/images/releases/fall-2020/Slipmats-Chillhop-Fall-2020-MockUp.jpg',\r\n      artist: 'Boonie Mayfield',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=8949',\r\n      color: ['#82365A', '#8FCAD7'],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: 'Changes',\r\n      cover:\r\n        'https://chillhop.com/wp-content/uploads/2020/05/260a909fca701bbb7593f5f8f9cff9508cca2856-1024x1024.jpg',\r\n      artist: 'Indécis',\r\n      audio: 'https://mp3.chillhop.com/serve.php/?mp3=7952',\r\n      color: ['#FAD8B8', '#9785B1'],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import React, { useState, useRef } from 'react';\nimport './styles/app.scss';\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\nimport data from './data';\n\nfunction App() {\n  const audioRef = useRef(null);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animationPercentage = Math.round(\n      (roundedCurrent / roundedDuration) * 100\n    );\n    setSongInfo({\n      ...songInfo,\n      currentTime: current,\n      duration: duration,\n      animationPercentage: animationPercentage,\n    });\n  };\n\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if (isPlaying) audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus ? 'library-active' : ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        audioRef={audioRef}\n        currentSong={currentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        ref={audioRef}\n        src={currentSong.audio}\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}